#!/bin/bash

#/ NAME
#/     build-box -- build and export a vagrant basebox
#/
#/ SYNOPSIS
#/     build-box [veewee]

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"
require 'profile'
require 'bundler'

# entry point
function main {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing veewee definition"
    exit 1
  fi

  local nm_veewee=$1; shift

  local vbox_gui=""
  if [[ "$FLAGS_gui" = "$FLAGS_FALSE" ]]; then
    vbox_gui="-n"
  fi

  bundle_macports

  bundle exec vagrant basebox build $nm_veewee -f $FLAGS_gui
  bundle exec vagrant basebox export $nm_veewee
  mv $nm_veewee.box $shome/boxes/${nm_veewee}_.box
  VBoxManage unregistervm ${nm_veewee} --delete || true

  bundle exec vagrant box remove ${nm_veewee}_
  bundle exec vagrant box add ${nm_veewee}_ $shome/boxes/${nm_veewee}_.box
  $shome/bin/instance "${nm_veewee}_" "${nm_veewee}"
  $shome/bin/package --destroy "$nm_veewee"
}

# define command line options:
#   var name, default, description, short option
DEFINE_boolean 'gui' "$FLAGS_FALSE" 'guest is run with a GUI'

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# pass arguments to entry point
main "$@"
