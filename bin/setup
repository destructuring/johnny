#!/bin/bash -e

[[ -d .git ]] || {
	echo "ERROR: must be at root of git workarea" 1>&2
	exit 1
}

# TODO where to put site specific config?
vboxnet="$(ifconfig vboxnet0 2>&- | grep 'inet ' | awk '{print $2}' | cut -d. -f1-3)"
if [[ -z $vboxnet ]]; then
  vboxif="$(ifconfig vboxnet0 2>&- | head -1 | cut -d: -f1)"
  [[ -z $vboxif ]] && VBoxManage hostonlyif create

	vboxnet="192.168.56"
	VBoxManage hostonlyif ipconfig vboxnet0 --ip $vboxnet.100 --netmask 255.255.255.0
fi

export lucid_ip="$vboxnet.99"
export natty_ip="$vboxnet.98"

bundle config build.nokogiri --with-xslt-dir=/opt/zendesk/macports/local
bundle check || bundle --local --path vendor/bundle

for a in "$@"; do
	nm_build=$(basename $(cat definitions/${a}_veewee/definition.rb  | grep iso_file | cut -d'"' -f2) .iso) # TODO weak
  url_build=$(cat definitions/${a}_veewee/definition.rb  | grep iso_src | cut -d'"' -f2) # TODO weak

  figlet "download iso"
  wget -c "$url_build" -O "iso/$nm_build.download.iso" # 404 does not return error code
  [[ -s "iso/$nm_build.download.iso" ]] || exit 1

  figlet "unpack iso"
  hdiutil mount -mountpoint "$(pwd)/iso/$nm_build.mnt" "iso/$nm_build.download.iso"
  sudo rm -rf "iso/$nm_build.src"
  sudo rsync -ia "iso/$nm_build.mnt/." "iso/$nm_build.src/"
  sudo chown -R $(id -un):$(id -gn) "iso/$nm_build.src"
  hdiutil unmount "$(pwd)/iso/$nm_build.mnt"

  figlet "build install"
  bin/build-ubuntu $a

  figlet "build vagrant"
  bin/build-vagrant $a -f

  figlet "start vagrant"
  eval bin/vagrant ${a}_vagrant up '"''$'"${a}_ip"'"'

  figlet "postinstall"
  bin/vagrant ${a}_vagrant ssh bash postinstall.sh vagrant
done


