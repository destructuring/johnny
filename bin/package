#!/bin/bash

#/ NAME
#/     package-instance -- creates a basebox from a vagrant
#/
#/ SYNOPSIS
#/     package-instance [vagrant]
#/     package-instance [vagrant] [basebox]

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"
require 'profile'
require 'bundler'

# entry point
function main {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing vagrant"
    exit 1
  fi

  if [[ "$#" < 2 ]]; then
    set -- "$@" "$1"
  fi

  local nm_instance=$1; shift
  local nm_base=$1; shift
  local ver_veewee="$(cat $shome/definitions/$nm_base/VERSION)"

  $shome/bin/vagrant $nm_instance package
  mv $UBUNTU/vagrant/$nm_instance/package.box $shome/boxes/archive/${nm_base}-${ver_veewee}.box

  if [[ "$FLAGS_destroy" = "$FLAGS_TRUE" ]]; then
    $shome/bin/vagrant -- "$nm_instance" destroy -f
    rm -rf $UBUNTU/vagrant/$nm_instance
  fi
}

# define command line options:
#   var name, default, description, short option
DEFINE_boolean "destroy" "$FLAGS_FALSE" "destroy the vm after packaging"

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# pass arguments to entry point
main "$@"


