#!/bin/bash

#/ NAME
#/     setup-instance -- creates a vagrant from a veewee basebox
#/
#/ SYNOPSIS
#/     setup-instance [vagrant] [veewee]

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"
source $shome/.profile

# entry point
function main {
  nm_instance=$1; shift
  nm_base=$1; shift

  $shome/bin/bundler

  figlet "config vagrant"
  # copy vagrant templates
  local vagrant_source
  if [[ -d $shome/definitions/$nm_base/vagrant ]]; then
    vagrant_source="$shome/definitions/$nm_base/vagrant/."
  elif [[ -f $shome/definitions/$nm_base/Vagrantfile ]]; then
    vagrant_source="$shome/definitions/$nm_base/."
  else
    vagrant_source="$shome/definitions/$nm_instance/."
  fi
  rsync --delete -ia "$vagrant_source"  "$shome/vagrant/$nm_instance/"

  # configure network
  if [[ -n "$FLAGS_ip" ]]; then
    tmp_vagrantfile="$(mktemp -t XXXXXXXXX)"
    {
      head -1 "$shome/vagrant/$nm_instance/Vagrantfile"
      echo "config.vm.network :hostonly, '$FLAGS_ip'"
      tail -n +2 "$shome/vagrant/$nm_instance/Vagrantfile" 
    } > "$tmp_vagrantfile"
    cp "$tmp_vagrantfile" "$shome/vagrant/$nm_instance/Vagrantfile"
    rm -f "$tmp_vagrantfile"
  fi

  figlet "start vagrant"
  $shome/bin/vagrant $nm_instance up || true # errors out on the /vagrant mount

  figlet "vbox version"
  ver_virtualbox=$(VBoxManage --version | perl -pe 's{[^\.\d].*$}{}')
  echo "$ver_virtualbox" | $shome/bin/vagrant -- ssh $nm_instance tee .vbox_version

  figlet "postinstall"
  $shome/bin/vagrant rsync $nm_instance -- "$shome/vagrant/$nm_instance/vagrant.sh" $nm_instance:
  $shome/bin/vagrant ssh $nm_instance -- bash vagrant.sh
}

# define command line options:
#   var name, default, description, short option
DEFINE_string 'ip' '' 'ip addresses'

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

if [[ "$#" < 1 ]]; then
  logger_fatal "missing vagrant"
  exit 1
fi

if [[ "$#" < 2 ]]; then
  logger_fatal "missing veewee definition"
  exit 1
fi

# pass arguments to entry point
main "$@"
