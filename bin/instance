#!/bin/bash

#/ NAME
#/     setup-instance -- creates a vagrant from a veewee basebox
#/
#/ SYNOPSIS
#/     setup-instance [vagrant] [veewee] [ipaddress]

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"
source $shome/.profile

# entry point
function main {
  nm_instance=$1; shift
  nm_base=$1; shift
  export ip_instance=$1; shift

  $shome/bin/bundler

  figlet "config vagrant"
  # copy vagrant templates
  if [[ -d $shome/definitions/$nm_base/vagrant ]]; then
    rsync -ia $shome/definitions/$nm_base/vagrant/. $shome/vagrant/$nm_instance/
  elif [[ -f $shome/definitions/$nm_base/Vagrantfile ]]; then
    rsync -ia $shome/definitions/$nm_base/. $shome/vagrant/$nm_instance/
  else
    rsync -ia $shome/definitions/$nm_instance/. $shome/vagrant/$nm_instance/
  fi

  # configure network
  perl -pe 'm{config.vm.network} && s{xxx.xxx.xxx.xxx}{$ENV{ip_instance}}' -i $shome/vagrant/$nm_instance/Vagrantfile

  # configure ssh keys
  cat ~/.ssh/authorized_keys "$(bundle show vagrant)/keys/vagrant.pub" > $shome/vagrant/$nm_instance/.ssh_authorized_keys

  figlet "start vagrant"
  $shome/bin/vagrant $nm_instance up || true # errors out on the /vagrant mount

  figlet "vbox ext"
  ver_virtualbox=$(VBoxManage --version | perl -pe 's{[^\.\d].*$}{}')
  url_guestadditions="http://download.virtualbox.org/virtualbox/$ver_virtualbox/VBoxGuestAdditions_$ver_virtualbox.iso"
  pth_guestadditions="$shome/iso/VBoxGuestAdditions_$ver_virtualbox.iso"

  if [[ ! -f $pth_guestadditions ]]; then
    wget -O $pth_guestadditions $url_guestadditions
  fi

  $shome/bin/vagrant -- rsync $nm_instance $pth_guestadditions $nm_instance:
  $shome/bin/vagrant -- ssh $nm_instance mount -o loop /root/$(basename $pth_guestadditions) /mnt # get rid of root home dir hardcode
  $shome/bin/vagrant -- ssh $nm_instance sh /mnt/VBoxLinuxAdditions.run
  $shome/bin/vagrant -- ssh $nm_instance umount /mnt
  $shome/bin/vagrant -- $nm_instance reload || { sleep 30; $shome/bin/vagrant -- $nm_instance reload; }

  figlet "postinstall"
  $shome/bin/vagrant -- ssh $nm_instance /vagrant/vagrant.sh
}

# define command line options:
#   var name, default, description, short option

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

if [[ "$#" < 1 ]]; then
  logger.fatal "missing vagrant"
  exit 1
fi

if [[ "$#" < 2 ]]; then
  logger.fatal "missing veewee definition"
  exit 1
fi

if [[ "$#" < 3 ]]; then
  logger.fatal "missing ip addresses"
  exit 1
fi

# pass arguments to entry point
main "$@"
